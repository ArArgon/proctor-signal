on:
  push:
    branches:
      - main
  pull_request:
permissions:
  packages: write
  contents: read
  pull-requests: read

env:
  IMAGE_NAME: proctor_signal

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19'
          check-latest: true
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.50
          only-new-issues: true
  unit-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19'
          check-latest: true
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - run: go mod download
      - run: go install gotest.tools/gotestsum@latest
      - run: go test -exec sudo -race ./...
#      - run: gotestsum -- -exec sudo -race -cover ./...
  build-image:
    runs-on: ubuntu-latest
    needs: [unit-test]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to GitHub Packages
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Prepare Envs 1
        run: |
          echo "OWNER=${GITHUB_REPOSITORY_OWNER,,}" >>${GITHUB_ENV}
          echo "TRUNCATED_REV=$(echo ${{ github.sha }} | awk '{print substr($0, 1, 8) }')" >>${GITHUB_ENV}
      - run: echo "IMAGE=ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}" >>${GITHUB_ENV}
      - name: Build (and push) Docker image
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ env.IMAGE }}:latest,${{ env.IMAGE }}:${{ env.TRUNCATED_REV }}
          labels: |
            "org.opencontainers.image.source=https://github.com/${{ github.repository }}"
            "org.opencontainers.image.description=Signal judge executor image"
            "org.opencontainers.image.revision=${{ github.sha }}"
            "org.opencontainers.image.ref.name=${{ github.ref }}"
